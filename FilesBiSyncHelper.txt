public class FilesBiSyncHelper {
    
    public static Map<Id, Map<String, String>> accGoogleDriveFolderId = new Map<Id, Map<String, String>>();
    
    public static void createDefaultFoldersInGoogleDrive(List<SObject> newList){
        String objectName = newList!=null ? newList[0].id.getSObjectType().getDescribe().getName() : '';
        for(Sobject obj : newList){
            if(objectName=='Account'){
                createAccountDefaultFoldersInGoogleDrive(newList);
            }else{
                system.debug('Inside createDefaultFoldersInGoogleDrive Trigger:'+obj);
                System.debug(objectName + ' System.IsBatch()->' +System.IsBatch() +'\n System.isFuture()->'+System.isFuture() + '\n System.isQueueable()->' +System.isQueueable());
                if(System.IsBatch() == false && System.isFuture() == false)// && System.isQueueable() == false
                    FilesBiSyncController.createDefaultFoldersFromTriggerAsync(obj.id, '', 'GoogleDrive'); 
                else
                    FilesBiSyncController.createDefaultFoldersFromTrigger(obj.id, '', 'GoogleDrive'); 
            }
        }
    }
    
    public static void createAccountDefaultFoldersInGoogleDrive(List<Account> newList){
        Set<Id> convertedeAccIds = new Set<Id>();
        List<Lead> convertedLeads = [select Id,Name,ConvertedAccountId,ConvertedOpportunityId from Lead where ConvertedAccountId in :newList];
        for(Lead each : convertedLeads){
            convertedeAccIds.add(each.ConvertedAccountId);
        }
        for(Account acc:newList){
            system.debug('Inside createDefaulfFoldersinGoogleDrive acc Trigger:'+acc);
            //on lead convertion, account folder get created from the converted opp. If opp is not created during lead conversion, then acc folder will be created
            if(!convertedeAccIds.contains(acc.id)){
                System.debug('Account-System.IsBatch()->' +System.IsBatch() +'\n System.isFuture()->'+System.isFuture() + '\n System.isQueueable()->' +System.isQueueable());
                if(System.IsBatch() == false && System.isFuture() == false)// && System.isQueueable() == false
                    FilesBiSyncController.createDefaultFoldersFromTriggerAsync(acc.id, '', 'GoogleDrive'); 
                else
                    FilesBiSyncController.createDefaultFoldersFromTrigger(acc.id, '', 'GoogleDrive');
            }
        }
    }
    
    public static void moveLeadFolderUnderAccount(Map<Id,Account> newMap, Map<Id,Account> oldMap){
        Set<Id> accIds = new Set<Id>();
        //Set<Id> accIds1 = new Set<Id>();//
        //List<Opportunity> oppList;//
        for(Account each : newMap.values()){
           /* if(each.FilesBiSync_Folder_Id__c != Null){//
                accIds1.add(each.Id);
            }//*/
            if(each.FilesBiSync_Folder_Id__c!=null && each.FilesBiSync_Folder_Id__c!=oldMap.get(each.Id).FilesBiSync_Folder_Id__c){
                accIds.add(each.Id);
            }
        }
        /*if(accIds1 != Null){//
            oppList = [Select Id, AccountId, Account.FilesBiSync_Folder_Id__c, FilesBiSync_Folder_Id__c From Opportunity where AccountId IN: accIds1 AND FilesBiSync_Folder_Id__c != Null AND Account.FilesBiSync_Folder_Id__c != Null];
        }
        system.debug('OppList=' +oppList);
        if(oppList != Null)
        {
            for(Opportunity opp : oppList){
                system.debug('opp.FilesBiSync_Folder_Id__c' +opp.FilesBiSync_Folder_Id__c);
                system.debug('opp.Account.FilesBiSync_Folder_Id__c' +opp.Account.FilesBiSync_Folder_Id__c);
                FilesBiSyncQueueable moveFodlerQueue1 = new FilesBiSyncQueueable(opp.FilesBiSync_Folder_Id__c, opp.Account.FilesBiSync_Folder_Id__c, 'moveGoogleDriveFileOrFolder');
            }
        }//*/
        system.debug('Inside moveLeadFolderUnderAccount accIds:'+accIds);
        if(accIds!=null){
            List<Lead> convertedLeads = [select Id,Name,ConvertedAccountId,ConvertedOpportunityId,FilesBiSync_Folder_Id__c from Lead where ConvertedAccountId in :accIds and FilesBiSync_Folder_Id__c!=null];
            List<AccountHistory> accFieldHistoryList = [SELECT Id, AccountId, Field, OldValue, NewValue FROM AccountHistory where AccountId in :accIds and Field='FilesBiSync_Folder_Id__c' order by CreatedDate desc];
            System.debug('accFieldHistoryList:'+accFieldHistoryList);
            Map<Id, List<AccountHistory>> accFieldHistoryMap = new Map<Id, List<AccountHistory>>();
            for(AccountHistory each: accFieldHistoryList){
                if(each.OldValue==null && each.NewValue!=null){		//on first time update history will be null as commit is not happened to DB, on second time udpate history will have first updated value which should be considered to move lead folder under acc
                    if(accFieldHistoryMap.containsKey(each.AccountId) && accFieldHistoryMap.get(each.AccountId)!=null){
                        accFieldHistoryMap.put(each.AccountId, (List<AccountHistory>)accFieldHistoryMap.get(each.AccountId).add(each));
                    }else
                        accFieldHistoryMap.put(each.AccountId, new List<AccountHistory>{each});
                    System.debug('Map: Id:'+each.AccountId+' Values:'+accFieldHistoryMap.get(each.AccountId));
                }
            }
            for(Lead each : convertedLeads){
                if(accFieldHistoryMap.containsKey(each.ConvertedAccountId) && accFieldHistoryMap.get(each.ConvertedAccountId).size()==1){
                    FilesBiSyncQueueable moveFodlerQueue = new FilesBiSyncQueueable(each.FilesBiSync_Folder_Id__c, newMap.get(each.ConvertedAccountId).FilesBiSync_Folder_Id__c, 'moveGoogleDriveFileOrFolder');
                    Id jobId = system.enqueueJob(moveFodlerQueue);
                }
            }
        }
    }
    
    public static void createLeadtDefaultFoldersInGoogleDrive(Map<Id,Lead> newMap){
        Set<Id> leadIds = new Set<Id>();
        if(System.IsBatch() == false && System.isFuture() == false){
            for(Sobject obj : newMap.values()){
                system.debug('Inside createLeadtDefaultFoldersInGoogleDrive Trigger:'+obj);                
                FilesBiSyncController.createDefaultFoldersFromTriggerAsync(obj.id, '', 'GoogleDrive'); 
            }
        }else{
            //doen't work when lead is created on landing page data insert. Even though lead is created in future method of LandingPageHelper, lead trigger is exceuted synchronously.
            //FilesBiSyncController.createDefaultFoldersFromTrigger(obj.id, '', 'GoogleDrive');
            
            FilesBiSyncQueueable moveFodlerQueue = new FilesBiSyncQueueable(new List<Id>(newMap.keySet()), 'createDefaultFoldersFromTrigger');
            Id jobId = system.enqueueJob(moveFodlerQueue);
        }
        
    }

}